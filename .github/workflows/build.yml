name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 30

    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-${{ matrix.target }}-
            ${{ runner.os }}-cargo-build-

      - name: Run tests
        run: |
          cargo test --target ${{ matrix.target }}

      - name: Run clippy
        run: |
          cargo clippy --target ${{ matrix.target }} -- -D warnings

      - name: Check formatting
        run: |
          cargo fmt --check

      - name: Build for ${{ matrix.target }}
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifacts
        run: |
          mkdir artifacts
          copy target\${{ matrix.target }}\release\upsclr-server.exe artifacts\

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: upsclr-server-${{ matrix.target }}
          path: artifacts/
          retention-days: 30